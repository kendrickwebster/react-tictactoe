{"version":3,"sources":["index.js"],"names":["Square","props","classes","value","isWin","className","onClick","text","Board","i","this","squares","cols","j","push","renderSquare","rows","renderRow","renderBoard","React","Component","Game","state","history","Array","fill","move","stepNumber","xIsNext","listAscending","slice","current","length","JSON","parse","stringify","calculateWinner","nextLetter","setState","concat","step","status","winner","full","isFull","moves","map","desc1","colNum","Math","floor","rowNum","desc","jumpTo","handleClick","onAscendingToggle","reverse","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cf3e637.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nfunction Square(props) {\n  const classes = props.value.isWin ? \"square square-winner\" : \"square\";\n  return (\n    <button className={classes} onClick={props.onClick}>\n      {props.value.text}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        key={i}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  renderRow(i) {\n    var cols = [];\n    for (var j = 0; j < 3; j++) {\n      cols.push(this.renderSquare(i*3 + j));\n    }\n    return (\n      <div className=\"board-row\" key={i}>\n        {cols}\n      </div>\n    );\n  }\n\n  renderBoard() {\n    var rows = [];\n    for (var i = 0; i < 3; i++) {\n      rows.push(this.renderRow(i));\n    }\n    return rows;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderBoard()}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill({text: null, isWin: false}),\n        move: null\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      listAscending: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = JSON.parse(JSON.stringify(current.squares)); /* deep copy */\n    if (calculateWinner(squares) || squares[i].text) {\n      return;\n    }\n    const nextLetter = this.state.xIsNext ? 'X' : 'O';\n    squares[i] = {text: nextLetter, isWin: false};\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        move: i\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  onAscendingToggle() {\n    this.setState({\n      listAscending: !this.state.listAscending,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const full = isFull(current.squares);\n\n    const moves = history.map((step, move) => {\n      const i = step.move;\n      const desc1 = move ?\n        'Go to move #' + move + ' (' + colNum(i) + ',' + rowNum(i) + ')' :\n        'Go to game start';\n      const desc = step === current ?\n        <b>{desc1}</b> :\n        desc1;\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else if (full) {\n      status = 'Game result: Draw';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <div>\n            <button onClick={() => this.onAscendingToggle()}>\n              {this.state.listAscending ? 'Show history descending' : 'Show history ascending'}\n            </button>\n          </div>\n          <ol>{this.state.listAscending ? moves : moves.slice().reverse()}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a].text\n      && squares[a].text === squares[b].text\n      && squares[a].text === squares[c].text)\n    {\n      squares[a].isWin = true;\n      squares[b].isWin = true;\n      squares[c].isWin = true;\n      return squares[a].text;\n    }\n  }\n  return null;\n}\n\nfunction isFull(squares) {\n  for (let i = 0; i < 9; i++) {\n    if (!squares[i].text) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction colNum(i) {\n  return i % 3 + 1;\n}\n\nfunction rowNum(i) {\n  return Math.floor(i / 3) + 1;\n}\n"],"sourceRoot":""}